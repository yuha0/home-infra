apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: compact
  name: thanos-compact
spec:
  ports:
  - name: http
    port: 10902
    targetPort: http
  selector:
    app.kubernetes.io/component: compact

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: compact
  name: thanos-compact
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: compact
  serviceName: thanos-compactor
  template:
    metadata:
      labels:
        app.kubernetes.io/component: compact
    spec:
      containers:
      - args:
        - compact
        - --wait
        - --retention.resolution-raw=180d
        - --retention.resolution-5m=180d
        - --retention.resolution-1h=180d
        - --objstore.config=$(OBJSTORE_CONFIG)
        - --data-dir=/var/thanos/compactor
        env:
        - name: OBJSTORE_CONFIG
          valueFrom:
            secretKeyRef:
              key: thanos.yaml
              name: thanos-objstore-config
        image: thanos
        resources:
          requests:
            memory: 300Mi
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /-/healthy
            port: 10902
            scheme: HTTP
          periodSeconds: 30
        name: thanos-compactor
        ports:
        - containerPort: 10902
          name: http
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /-/ready
            port: 10902
            scheme: HTTP
          periodSeconds: 5
        volumeMounts:
        - mountPath: /var/thanos/compactor
          name: data
          readOnly: false
      terminationGracePeriodSeconds: 120
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: "nfs-client"
      resources:
        requests:
          storage: 30Gi
