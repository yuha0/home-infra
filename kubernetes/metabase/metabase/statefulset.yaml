apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: metabase
spec:
  replicas: 1
  serviceName: metabase
  template:
    spec:
      containers:
      - name: metabase
        image: metabase
        imagePullPolicy: IfNotPresent
        env:
        - name: MB_JETTY_HOST
          value: "0.0.0.0"
        - name: MB_JETTY_PORT
          value: "3000"
        - name: MB_ANON_TRACKING_ENABLED
          value: "false"
        - name: MB_CHECK_FOR_UPDATES
          value: "false"
        - name: MB_ENABLE_PUBLIC_SHARING
          value: "true"
        - name: MB_ENABLE_QUERY_CACHING
          value: "true"
        - name: MB_DB_TYPE
          value: postgres
        - name: MB_DB_HOST
          value: "db"
        - name: MB_DB_PORT
          value: "5432"
        - name: MB_DB_DBNAME
          value: "metabase"
        - name: MB_DB_USER
          value: "metabase"
        - name: MB_DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-user
              key: CUSTOM_DB_PASSWORD
        - name: MB_PASSWORD_COMPLEXITY
          value: weak
        - name: MB_PASSWORD_LENGTH
          value: "6"
        - name: JAVA_TIMEZONE
          value: UTC
        - name: JAVA_OPTS
          value: "-Xms128m -Xmx512m"
        - name: MB_EMOJI_IN_LOGS
          value: "false"
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 120
          timeoutSeconds: 30
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
      nodeSelector:
        kubernetes.io/arch: amd64
