---
# Source: unifi/templates/common.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: unifi-unifi-data
  labels:
    helm.sh/chart: unifi-4.2.3
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/version: "v6.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "nfs-client"
---
# Source: unifi/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: unifi
  labels:
    helm.sh/chart: unifi-4.2.3
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/version: "v6.2.26"
    app.kubernetes.io/managed-by: Helm
  annotations:
    traefik.ingress.kubernetes.io/service.serversscheme: https
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: controller
    protocol: TCP
    name: controller
  - port: 10001
    targetPort: discovery
    protocol: UDP
    name: discovery
  - port: 8443
    targetPort: http
    protocol: TCP
    name: http
  - port: 8880
    targetPort: portal-http
    protocol: TCP
    name: portal-http
  - port: 8843
    targetPort: portal-https
    protocol: TCP
    name: portal-https
  - port: 6789
    targetPort: speedtest
    protocol: TCP
    name: speedtest
  - port: 3478
    targetPort: stun
    protocol: UDP
    name: stun
  - port: 5514
    targetPort: syslog
    protocol: UDP
    name: syslog
  selector:
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
---
# Source: unifi/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unifi
  labels:
    helm.sh/chart: unifi-4.2.3
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/version: "v6.2.26"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: unifi
      app.kubernetes.io/instance: unifi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: unifi
        app.kubernetes.io/instance: unifi
    spec:
      
      serviceAccountName: default
      securityContext:
        runAsGroup: 999
        runAsUser: 999
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - command:
          - /bin/sh
          - -c
          - mkdir -p /unifi/data/ && cp /tmp/unifi/config.gateway.json /unifi/data/config.gateway.json
          image: busybox:1.33.1
          name: config-init
          volumeMounts:
          - mountPath: /unifi/
            name: unifi-data
          - mountPath: /tmp/unifi
            name: unifi-config
      containers:
        - name: unifi
          image: "jacobalberty/unifi:v6.4.54"
          imagePullPolicy: IfNotPresent
          env:
            - name: "DB_NAME"
              value: "unifi"
            - name: "DB_URI"
              value: "mongodb://unifi-mongodb.unifi.svc.cluster.local.:27017/unifi"
            - name: "JVM_MAX_HEAP_SIZE"
              value: "2048M"
            - name: "RUNAS_UID0"
              value: "false"
            - name: "STATDB_URI"
              value: "mongodb://unifi-mongodb.unifi.svc.cluster.local.:27017/unifi_stat"
            - name: "TZ"
              value: "UTC"
            - name: "UNIFI_GID"
              value: "999"
            - name: "UNIFI_STDOUT"
              value: "true"
            - name: "UNIFI_UID"
              value: "999"
          ports:
            - name: controller
              containerPort: 8080
              protocol: TCP
            - name: discovery
              containerPort: 10001
              protocol: UDP
            - name: http
              containerPort: 8443
              protocol: TCP
            - name: portal-http
              containerPort: 8880
              protocol: TCP
            - name: portal-https
              containerPort: 8843
              protocol: TCP
            - name: speedtest
              containerPort: 6789
              protocol: TCP
            - name: stun
              containerPort: 3478
              protocol: UDP
            - name: syslog
              containerPort: 5514
              protocol: UDP
          volumeMounts:
            - name: unifi-config
              mountPath: /tmp/unifi
            - name: unifi-data
              mountPath: /unifi
          livenessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8443
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          resources:
            requests:
              memory: 3Gi
      volumes:
        - name: unifi-config
          configMap:
            name: unifi-config
        - name: unifi-data
          persistentVolumeClaim:
            claimName: unifi-unifi-data
---
# Source: unifi/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unifi
  labels:
    helm.sh/chart: unifi-4.2.3
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/version: "v6.2.26"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: nginx-internal
  rules:
    - host: "unifi.internal.yuha0.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: unifi
                port:
                  number: 8443
---
# Source: unifi/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: unifi-portal
  labels:
    helm.sh/chart: unifi-4.2.3
    app.kubernetes.io/name: unifi
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/version: "v6.2.26"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  rules:
    - host: "guest.yuha0.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: unifi
                port:
                  number: 8443
