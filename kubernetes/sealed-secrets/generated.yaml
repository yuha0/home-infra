---
# Source: crds/bitnami.com_sealedsecrets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: sealedsecrets.bitnami.com
spec:
  group: bitnami.com
  names:
    kind: SealedSecret
    listKind: SealedSecretList
    plural: sealedsecrets
    singular: sealedsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[0].message
      name: Status
      type: string
    - jsonPath: .status.conditions[0].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          SealedSecret is the K8s representation of a "sealed Secret" - a
          regular k8s Secret that has been sealed (encrypted) using the
          controller's key.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SealedSecretSpec is the specification of a SealedSecret.
            properties:
              data:
                description: Data is deprecated and will be removed eventually. Use
                  per-value EncryptedData instead.
                format: byte
                type: string
              encryptedData:
                additionalProperties:
                  type: string
                type: object
                x-kubernetes-preserve-unknown-fields: true
              template:
                description: |-
                  Template defines the structure of the Secret that will be
                  created from this sealed secret.
                properties:
                  data:
                    additionalProperties:
                      type: string
                    description: Keys that should be templated using decrypted data.
                    nullable: true
                    type: object
                  immutable:
                    description: |-
                      Immutable, if set to true, ensures that data stored in the Secret cannot
                      be updated (only object metadata can be modified).
                      If not set to true, the field can be modified at any time.
                      Defaulted to nil.
                    type: boolean
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
                    nullable: true
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      finalizers:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      name:
                        type: string
                      namespace:
                        type: string
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type:
                    description: Used to facilitate programmatic handling of secret
                      data.
                    type: string
                type: object
            required:
            - encryptedData
            type: object
          status:
            description: SealedSecretStatus is the most recently observed status of
              the SealedSecret.
            properties:
              conditions:
                description: Represents the latest available observations of a sealed
                  secret's current state.
                items:
                  description: SealedSecretCondition describes the state of a sealed
                    secret at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: |-
                        Status of the condition for a sealed secret.
                        Valid values for "Synced": "True", "False", or "Unknown".
                      type: string
                    type:
                      description: |-
                        Type of condition for a sealed secret.
                        Valid value: "Synced"
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration reflects the generation most recently
                  observed by the sealed-secrets controller.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: sealed-secrets/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sealed-secrets-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: sealed-secrets
      app.kubernetes.io/instance: sealed-secrets-controller
  ingress:
    - ports:
      - port: 8080
      - port: 8081
---
# Source: sealed-secrets/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
---
# Source: sealed-secrets/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secrets-unsealer
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
rules:
  - apiGroups:
      - bitnami.com
    resources:
      - sealedsecrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - bitnami.com
    resources:
      - sealedsecrets/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: sealed-secrets/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets-controller
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secrets-unsealer
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: sealed-secrets-controller
    namespace: kube-system
---
# Source: sealed-secrets/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sealed-secrets-controller-key-admin
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
rules:
  - apiGroups:
      - ""
    resourceNames:
      - sealed-secrets-key
    resources:
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - list
---
# Source: sealed-secrets/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sealed-secrets-controller-service-proxier
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
rules:
  - apiGroups:
      - ""
    resourceNames:
      - sealed-secrets-controller
    resources:
      - services
    verbs:
      - get
  - apiGroups:
      - ""
    resourceNames:
      - 'http:sealed-secrets-controller:'
      - 'http:sealed-secrets-controller:http'
      - sealed-secrets-controller
    resources:
      - services/proxy
    verbs:
      - create
      - get
---
# Source: sealed-secrets/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sealed-secrets-controller-key-admin
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sealed-secrets-controller-key-admin
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: sealed-secrets-controller
    namespace: kube-system
---
# Source: sealed-secrets/templates/role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sealed-secrets-controller-service-proxier
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sealed-secrets-controller-service-proxier
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
---
# Source: sealed-secrets/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      nodePort: null
  selector:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/instance: sealed-secrets-controller
---
# Source: sealed-secrets/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets-controller-metrics
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
    app.kubernetes.io/component: metrics
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 8081
      targetPort: metrics
      nodePort: null
  selector:
    app.kubernetes.io/name: sealed-secrets
    app.kubernetes.io/instance: sealed-secrets-controller
---
# Source: sealed-secrets/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealed-secrets-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: sealed-secrets
    helm.sh/chart: sealed-secrets-2.17.2
    app.kubernetes.io/instance: sealed-secrets-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.29.0
    app.kubernetes.io/part-of: sealed-secrets
  annotations:
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sealed-secrets
      app.kubernetes.io/instance: sealed-secrets-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sealed-secrets
        app.kubernetes.io/instance: sealed-secrets-controller
    spec:
      securityContext:
        fsGroup: 65534
      serviceAccountName: sealed-secrets-controller
      containers:
        - name: controller
          command:
            - controller
          args:
            - --update-status
            - --key-renew-period
            - "2160h30m"
            - --key-prefix
            - "sealed-secrets-key"
            - --listen-addr
            - :8080
            - --listen-metrics-addr
            - :8081
          image: docker.io/bitnami/sealed-secrets-controller:0.29.0
          imagePullPolicy: IfNotPresent
          env:
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /healthz
              port: http
          resources:
            limits: {}
            requests: {}
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}
